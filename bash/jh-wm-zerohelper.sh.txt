#!/bin/bash

# JAVA HELPER WM PLATFORM
# dependencies: git-bash-aliases.sh, set-java-version.sh

__JH_WMP_UPDATED__='2024-11-24 21:17'
__JH_TIMEOUT_RETRY_SEC__=15
__JH_TIMEOUT_CONTINUE_SEC__=5
__JH_WMP_START_LIST_FILE__='_jh-wm-start-platform-list.sh.txt'
__JH_GIT_CHECKOUT_PULL_DEV_FAIL_FILE__='zgit-checkout-pull-dev-fail.tmp'
__JH_GIT_COMPILE_FAIL_FILE__='zgit-compile-fail.tmp'
__JH_RESTORE_DIR__='__RESTORE_LOC_ALB__'


### main functions



function _jh_start_platform {

    __date_ini=$( date )
    __uxt_ini=$( date +'%s' )

    alias _0sp
    cdkj_s
    sj8
    echo
    sleep ${__JH_TIMEOUT_CONTINUE_SEC__}

    ### bulkfileprocessor_test_block1
    # bulkfileprocessor_test_block1

    cdkj_s

    if [ -e ${__JH_WMP_START_LIST_FILE__} ]
    then
        echo -e 'starting platform from definitions in file '\'${__JH_WMP_START_LIST_FILE__}\'
        command source ${__JH_WMP_START_LIST_FILE__}
        _jh_wm_start_platform_list
    else
        echo -e 'starting platform from definitions in current script \n'
        sleep 3
        
        _jh_start_service microservicesregistry

        _jh_start_service usermanagement
        _jh_start_service mappingmanagement

        _jh_start_service marketplaceebay
        _jh_start_service marketplacemirakl
        _jh_start_service marketplacemiravia
        _jh_start_service marketplaceamazon
        _jh_start_service marketplacemakro
        # _jh_start_service marketplacealiexpress
        # _jh_start_service marketplaceprestashop
        
        _jh_start_service productmanagement
        _jh_start_service ordermanagement
        _jh_start_service ktypeprocessor
        _jh_start_service bulkfileprocessor
        _jh_start_service apiprocessor

        # _jh_start_service merchantlogisfashion
        # _jh_start_service carrierseur
        # _jh_start_service carriertipsa
        # _jh_start_service carriercorreosexpress

        _jh_start_service template-generator
        _jh_start_service mailing
        _jh_start_service redirectionmanager
        _jh_start_service ui

        # _jh_start_service aecoc
        # _jh_start_service icecat
        # _jh_start_service pim
    fi

    cdkj_s

    ### bulkfileprocessor_test_block2
    # bulkfileprocessor_test_block2
    
    __uxt_end=$( date +'%s' )
    let '__uxt_diff=__uxt_end-__uxt_ini' '__proc_min=__uxt_diff/60' '__proc_sec=__uxt_diff%60' 
    echo 'WM local deployment completed'
    echo 'start: '$( date -d '@'${__uxt_ini} )
    echo 'end:   '$( date -d '@'${__uxt_end} )
    echo 'total execution time (min:sec) -- '${__proc_min}':'${__proc_sec}

}



function _jh_remove_logs_platform {
    cdk_s
    command cd log

    command rm -v microservices*.jar.log

    command rm -v usermanagement*.jar.log
    command rm -v mapping*.jar.log

    command rm -v marketplaceebay*.jar.log
    command rm -v marketplacemirakl*.jar.log
    command rm -v marketplacemiravia*.jar.log
    command rm -v marketplaceamazon*.jar.log
    command rm -v marketplacemakro*.jar.log
    command rm -v marketplacealiexpress*.jar.log
    command rm -v marketplaceprestashop*.jar.log

    command rm -v productmanagement*.jar.log
    command rm -v ordermanagement*.jar.log
    command rm -v ktypeprocessor*.jar.log
    command rm -v bulk*.jar.log
    command rm -v apiproc*.jar.log

    command rm -v merchantlogisfashion*.jar.log
    command rm -v carrierseur*.jar.log
    command rm -v carriertipsa*.jar.log
    command rm -v carriercorreosexpress*.jar.log

    command rm -v mailing*.jar.log
    command rm -v template-generator*.jar.log
    command rm -v redirection*.jar.log
    command rm -v ui*.jar.log

    command rm -v aecoc*.jar.log
    command rm -v icecat*.jar.log
    command rm -v pim*.jar.log

    clear ; echo 'refreshing...' ; sleep 1 ; clear ;
    alias _0rlp
    pwd
    ll
    cdkj_s
    echo
}



function _jh_remove_log_service {
    cdk_s
    command cd log
    command rm -v ${1}*.jar.log
    # clear ; echo 'refreshing...' ; sleep 1 ; clear ;
    # alias _0rls
    # pwd
    # ll
    cdkj_s
    echo
}



function _jh_truncate_logs_platform {
    cdk_s
    command cd log

    command echo -n '' > microservices*.jar.log

    command echo -n '' > usermanagement*.jar.log
    command echo -n '' > mapping*.jar.log

    command echo -n '' > marketplaceebay*.jar.log
    command echo -n '' > marketplacemirakl*.jar.log
    command echo -n '' > marketplacemiravia*.jar.log
    command echo -n '' > marketplaceamazon*.jar.log
    command echo -n '' > marketplacemakro*.jar.log
    command echo -n '' > marketplacealiexpress*.jar.log
    command echo -n '' > marketplaceprestashop*.jar.log
    
    command echo -n '' > productmanagement*.jar.log
    command echo -n '' > ordermanagement*.jar.log
    command echo -n '' > ktypeprocessor*.jar.log
    command echo -n '' > bulk*.jar.log
    command echo -n '' > apiproc*.jar.log

    command echo -n '' > merchantlogisfashion*.jar.log
    command echo -n '' > carrierseur*.jar.log
    command echo -n '' > carriertipsa*.jar.log
    command echo -n '' > carriercorreosexpress*.jar.log

    command echo -n '' > mailing*.jar.log
    command echo -n '' > template-generator*.jar.log
    command echo -n '' > redirection*.jar.log
    command echo -n '' > ui*.jar.log

    command echo -n '' > aecoc*.jar.log
    command echo -n '' > icecat*.jar.log
    command echo -n '' > pim*.jar.log

    clear ; echo 'refreshing...' ; sleep 1 ; clear ;
    alias _0tlp
    pwd
    ll
    cdkj_s
    echo
}


function _jh_kill_service {
    alias _0ks
    cdkj_s
    command cd ${1}
    pwd
    tk
    echo
}



function _jh_kill_platform {
    alias _0kp
    cdkj_s

    _jh_kill_service pim
    _jh_kill_service icecat
    _jh_kill_service aecoc

    _jh_kill_service ui
    _jh_kill_service redirectionmanager
    _jh_kill_service template-generator
    _jh_kill_service mailing

    _jh_kill_service carrierseur
    _jh_kill_service carriertipsa
    _jh_kill_service carriercorreosexpress
    _jh_kill_service merchantlogisfashion

    _jh_kill_service apiprocessor
    _jh_kill_service bulkfileprocessor
    _jh_kill_service ktypeprocessor
    _jh_kill_service ordermanagement
    _jh_kill_service productmanagement

    _jh_kill_service marketplaceebay
    _jh_kill_service marketplacemirakl
    _jh_kill_service marketplacemiravia
    _jh_kill_service marketplaceamazon
    _jh_kill_service marketplacemakro
    _jh_kill_service marketplacealiexpress
    _jh_kill_service marketplaceprestashop

    _jh_kill_service mappingmanagement
    _jh_kill_service usermanagement

    _jh_kill_service microservicesregistry

    cdkj_s
}



function _jh_start_service {
    cdkj_s
    if [ ! -d "${1}" ] ; then
        echo 'directory '${1}' not available, exit'
        echo
        cdkj_s
        return 1
    fi
    command cd ${1}
    pwd

    # jvm memory management, special cases
    if [ ${1} = 'microservicesregistry' ]
    then
        __JH_XMX__='128m'

    elif [ ${1} = 'usermanagement' ]
    then
        : __JH_XMX__='256'

    elif [ ${1} = 'mappingmanagement' ]
    then
        : __JH_XMX__='256m'
        
    elif [ ${1} = 'marketplaceebay' ]
    then
        __JH_XMX__='320m'

    elif [ ${1} = 'marketplacemirakl' ]
    then
        __JH_XMX__='192m'

    elif [ ${1} = 'marketplacemiravia' ]
    then
        __JH_XMX__='192m'
        
    elif [ ${1} = 'marketplaceamazon' ]
    then
        __JH_XMX__='192m'

    elif [ ${1} = 'marketplacemakro' ]
    then
        __JH_XMX__='192m'

    elif [ ${1} = 'marketplacealiexpress' ]
    then
        __JH_XMX__='192m'

    elif [ ${1} = 'marketplaceprestashop' ]
    then
        __JH_XMX__='192m'

    elif [ ${1} = 'productmanagement' ]
    then
        : __JH_XMX__='256m'

    elif [ ${1} = 'ordermanagement' ]
    then
        __JH_XMX__='416m'

    elif [ ${1} = 'ktypeprocessor' ]
    then
        __JH_XMX__='192m'

    elif [ ${1} = 'bulkfileprocessor' ]
    then
        : __JH_XMX__='256m'

    elif [ ${1} = 'apiprocessor' ]
    then
        : __JH_XMX__='192m'

    elif [ ${1} = 'mailing' ]
    then
        __JH_XMX__='128m'

    elif [ ${1} = 'template-generator' ]
    then
        __JH_XMX__='128m'
        
    elif [ ${1} = 'carrierseur' ]
    then
        __JH_XMX__='128m'
        
    elif [ ${1} = 'carriertipsa' ]
    then
        __JH_XMX__='128m'

    elif [ ${1} = 'carriercorreosexpress' ]
    then
        __JH_XMX__='128m'

    elif [ ${1} = 'redirectionmanager' ]
    then
        __JH_XMX__='128m'

    elif [ ${1} = 'ui' ]
    then
        __JH_XMX__='192m'

    elif [ ${1} = 'aecoc' ]
    then
        __JH_XMX__='128m'

    elif [ ${1} = 'icecat' ]
    then
        __JH_XMX__='128m'

    elif [ ${1} = 'pim' ]
    then
        __JH_XMX__='128m'

    fi
    # echo '__JH_XMX_DEFAULT__, __JH_XMX__: '${__JH_XMX_DEFAULT__}', '${__JH_XMX__}
    
    jjr
    command cd ..
    
    __JH_XMX__=${__JH_XMX_DEFAULT__}
    
    echo
    _jh_check_service_started ${1}
    
    echo '__JH_XMX_DEFAULT__, __JH_XMX__: '${__JH_XMX_DEFAULT__}', '${__JH_XMX__}
    echo
}



function _jh_check_service_started {
    cdkj_s
    command cd ${1}
    pwd
    while true ; do
	echo -n 'check '\'"${1}"\'' is started... '
        jjrg 'tomcat started' > /dev/null
	__check_ss__=${?}
	if [ ${__check_ss__} -eq '0' ] ; then
	    echo 'yes, wait '${__JH_TIMEOUT_CONTINUE_SEC__}' sec to continue... '
	    sleep ${__JH_TIMEOUT_CONTINUE_SEC__}
	    command cd ..
	    break
        else
	    echo 'no, retry in '${__JH_TIMEOUT_RETRY_SEC__}' sec'
	    sleep ${__JH_TIMEOUT_RETRY_SEC__}
	fi
    done
}



function _jh_restart_service {

    alias _0rs
    
    cdkj_s
    
    if [ -z ${1} ] ; then
        echo '${arg1} is empty, should be valid directory/microservice; exit'
        return 1
    elif [ ! -d ${1}  ] ; then
        echo '${arg1} is not valid directory/microservice; exit'
        return 1
    fi
    
    echo
    sj8
    echo
    
    cdkj_s
    _jh_remove_log_service ${1}
    
    cdkj_s
    _jh_kill_service ${1}
    
    cdkj_s
    _jh_start_service ${1}
    
    cdkj_s
}



### auxiliar / testing functions


function _jh_backup_alberto_service {
    cdkj_s
    if [ ! -d "${1}" ] ; then
        echo 'directory '${1}' not available, exit'
        echo
        cdkj_s
        return 1
    fi
    command cd ${1}
    
    echo '--> backup alberto files from '\'$( pwd  )\'
    find . -iname '*alberto*' | grep -v '/target/' | grep -v "/${__JH_RESTORE_DIR__}/" | xargs -I % cp -v % '../zalberto/z'${1}'/'
    # find ./src -name '*alberto*' | while read myfile; do command cp -v ${myfile} '../zalberto/z'${1}'/'; done; # deprecated
    if [ "${1}" = 'marketplaceebay' ] ; then
        command git restore --source=dev pom.xml # deprecate?
    fi
    command cd ..
    echo
}


function _jh_backup_alberto_platform {
    cdkj_s
    echo -e '--> backup alberto files, whole platform\n'

    _jh_backup_alberto_service microservicesregistry 

    _jh_backup_alberto_service usermanagement
    _jh_backup_alberto_service mappingmanagement

    _jh_backup_alberto_service marketplaceebay
    _jh_backup_alberto_service marketplacemirakl
    _jh_backup_alberto_service marketplacemiravia
    _jh_backup_alberto_service marketplaceamazon
    _jh_backup_alberto_service marketplacemakro
    _jh_backup_alberto_service marketplacealiexpress
    _jh_backup_alberto_service marketplaceprestashop
    
    _jh_backup_alberto_service productmanagement
    _jh_backup_alberto_service ordermanagement
    _jh_backup_alberto_service ktypeprocessor
    _jh_backup_alberto_service bulkfileprocessor
    _jh_backup_alberto_service apiprocessor

    _jh_backup_alberto_service merchantlogisfashion
    _jh_backup_alberto_service carrierseur
    _jh_backup_alberto_service carriertipsa
    _jh_backup_alberto_service carriercorreosexpress

    _jh_backup_alberto_service mailing
    _jh_backup_alberto_service template-generator
    _jh_backup_alberto_service redirectionmanager
    _jh_backup_alberto_service ui

    _jh_backup_alberto_service aecoc
    _jh_backup_alberto_service icecat
    _jh_backup_alberto_service pim

}


function _jh_restore_alberto_service {
    cdkj_s
    command cd ${1}
    command rm -vfR ./${__JH_RESTORE_DIR__}
    command mkdir -v ./${__JH_RESTORE_DIR__}
    echo '--> restore alberto files to folder '\'$( pwd  )'/'${__JH_RESTORE_DIR__}\'
    # command cp -v '../zalberto/z'${1}'/pom.xml.alberto' ./  # deprecated
    # command cp -v ./pom.xml.alberto ./pom.xml  # deprecated
    # command cp -v '../zalberto/z'${1}'/log4j2-alberto.xml' ./src/main/resources/  # deprecated
    # command cp -v '../zalberto/z'${1}'/application-alberto.yml' ./src/main/resources/ # deprecated
    # command cp -v '../zalberto/z'${1}'/CLR_alberto.java' ./ # deprecated
    command cp -v '../zalberto/z'${1}'/'* ./${__JH_RESTORE_DIR__}
    
    command cd ..
    echo
}



function _jh_restore_alberto_platform {
    
    _jh_clean_restore_dir_alberto_platform
    echo 'existing restore dirs were eliminated, now re-create them and do restore'
    sleep ${__JH_TIMEOUT_CONTINUE_SEC__}
    
    cdkj_s
    echo -e '--> restore alberto files, whole platform\n'
    echo

    _jh_restore_alberto_service microservicesregistry 

    _jh_restore_alberto_service usermanagement
    _jh_restore_alberto_service mappingmanagement

    _jh_restore_alberto_service marketplaceebay
    _jh_restore_alberto_service marketplacemirakl
    _jh_restore_alberto_service marketplacemiravia
    _jh_restore_alberto_service marketplaceamazon
    _jh_restore_alberto_service marketplacemakro
    _jh_restore_alberto_service marketplacealiexpress
    _jh_restore_alberto_service marketplaceprestashop

    _jh_restore_alberto_service productmanagement
    _jh_restore_alberto_service ordermanagement
    _jh_restore_alberto_service ktypeprocessor
    _jh_restore_alberto_service bulkfileprocessor
    _jh_restore_alberto_service apiprocessor

    _jh_restore_alberto_service merchantlogisfashion
    _jh_restore_alberto_service carrierseur
    _jh_restore_alberto_service carriertipsa
    _jh_restore_alberto_service carriercorreosexpress

    _jh_restore_alberto_service mailing
    _jh_restore_alberto_service template-generator
    _jh_restore_alberto_service redirectionmanager
    _jh_restore_alberto_service ui

    _jh_restore_alberto_service aecoc
    _jh_restore_alberto_service icecat
    _jh_restore_alberto_service pim

}



function _jh_clean_restore_dir_alberto_service {
    cdkj_s
    command cd ${1}
    command rm -vfR ./${__JH_RESTORE_DIR__}
    command cd ..
    echo
}



function _jh_clean_restore_dir_alberto_platform {
    cdkj_s
    echo -e '--> clean restore dirs for alberto files, whole platform\n'
    echo

    _jh_clean_restore_dir_alberto_service microservicesregistry 

    _jh_clean_restore_dir_alberto_service usermanagement
    _jh_clean_restore_dir_alberto_service mappingmanagement

    _jh_clean_restore_dir_alberto_service marketplaceebay
    _jh_clean_restore_dir_alberto_service marketplacemirakl
    _jh_clean_restore_dir_alberto_service marketplacemiravia
    _jh_clean_restore_dir_alberto_service marketplaceamazon
    _jh_clean_restore_dir_alberto_service marketplacemakro
    _jh_clean_restore_dir_alberto_service marketplacealiexpress
    _jh_clean_restore_dir_alberto_service marketplaceprestashop

    _jh_clean_restore_dir_alberto_service productmanagement
    _jh_clean_restore_dir_alberto_service ordermanagement
    _jh_clean_restore_dir_alberto_service ktypeprocessor
    _jh_clean_restore_dir_alberto_service bulkfileprocessor
    _jh_clean_restore_dir_alberto_service apiprocessor

    _jh_clean_restore_dir_alberto_service merchantlogisfashion
    _jh_clean_restore_dir_alberto_service carrierseur
    _jh_clean_restore_dir_alberto_service carriertipsa
    _jh_clean_restore_dir_alberto_service carriercorreosexpress

    _jh_clean_restore_dir_alberto_service mailing
    _jh_clean_restore_dir_alberto_service template-generator
    _jh_clean_restore_dir_alberto_service redirectionmanager
    _jh_clean_restore_dir_alberto_service ui

    _jh_clean_restore_dir_alberto_service aecoc
    _jh_clean_restore_dir_alberto_service icecat
    _jh_clean_restore_dir_alberto_service pim

}



function _jh_mysqldump_alberto_service {
    cdkj_s
    __jh_db_prefix__='pre_'
    __jh_db_file_ext__='.sql'
    command mysqldump -u root --password=1234 -h localhost -P 3306 --add-drop-database --add-drop-table --skip-extended-insert --databases ${__jh_db_prefix__}${1} > './zalberto/zsql/'${__jh_db_prefix__}${1}${__jh_db_file_ext__}
    unset  __jh_db_prefix__  __jh_db_file_ext__
    echo
}



function _jh_mysqldump_alberto_platform {
    cdkj_s
    echo -e '--> mysqldump, whole platform\n'
    echo

    # _jh_mysqldump_alberto_service microservicesregistry # no database

    _jh_mysqldump_alberto_service usermanagement
    _jh_mysqldump_alberto_service mappingmanagement

    _jh_mysqldump_alberto_service marketplaceebay
    _jh_mysqldump_alberto_service marketplacemirakl
    _jh_mysqldump_alberto_service marketplacemiravia
    _jh_mysqldump_alberto_service marketplaceamazon
    _jh_mysqldump_alberto_service marketplacemakro
    _jh_mysqldump_alberto_service marketplacealiexpress
    _jh_mysqldump_alberto_service marketplaceprestashop

    _jh_mysqldump_alberto_service productmanagement
    _jh_mysqldump_alberto_service ordermanagement
    _jh_mysqldump_alberto_service ktypeprocessor
    _jh_mysqldump_alberto_service bulkfileprocessor
    _jh_mysqldump_alberto_service apiprocessor

    _jh_mysqldump_alberto_service merchantlogisfashion
    _jh_mysqldump_alberto_service carrierseur
    _jh_mysqldump_alberto_service carriertipsa
    _jh_mysqldump_alberto_service carriercorreosexpress

    _jh_mysqldump_alberto_service mailing
    _jh_mysqldump_alberto_service templategenerator # adjusted; microservice is 'template-generator'
    _jh_mysqldump_alberto_service redirectionmanager
    # _jh_mysqldump_alberto_service ui # no database

    _jh_mysqldump_alberto_service aecoc
    _jh_mysqldump_alberto_service icecat
    _jh_mysqldump_alberto_service pim

}



# experimental, deprecate?
function _jh_EXP_compile_service {
    cdkj_s
    command cd ${1}
    echo '--> compile service in '\'$( pwd  )\'
    tk
    command cp -v ./pom.xml.alberto ./pom.xml
    echo -n 'compiling...'
    command mvn clean package -Dmaven.test.skip=true &> /dev/null
    _tmp_ec=${?}
    if [ ${_tmp_ec} -ne '0' ]; then
        echo $(basename $(pwd)) >> ../${__JH_GIT_COMPILE_FAIL_FILE__}
    fi
    echo 'exit code from mvn: '${_tmp_ec}

    
    command cd ..
    echo
}




# experimental, deprecate?
function _jh_EXP_git_fetch_service {
    cdkj_s
    command cd ${1}
    echo '--> git fetch service in '\'$( pwd  )\'
    command git fetch
    echo 'exit code from git fetch: '${?}
    command cd ..
    echo
}




# experimental, deprecate?
function _jh_EXP_git_checkout_pull_dev_service { 
    cdkj_s
    command cd ${1}
    echo '--> git checkout pull dev service in '\'$( pwd  )\'

    command git checkout dev
    _tmp_ec=${?}
    if [ ${_tmp_ec} -ne '0' ]; then
        echo $(basename $(pwd)) >> ../${__JH_GIT_CHECKOUT_PULL_DEV_FAIL_FILE__}
        echo 'exit code from git fetch: '${_tmp_ec}
        return ${_tmp_ec}
    fi
    echo 'exit code from git fetch: '${_tmp_ec}
    
    command git pull
    _tmp_ec=${?}
    if [ ${_tmp_ec} -ne '0' ]; then
        echo $(basename $(pwd)) >> ../$${__JH_GIT_CHECKOUT_PULL_DEV_FAIL_FILE__}
        echo 'exit code from git pull: '${_tmp_ec}
        return ${_tmp_ec}
    fi
    echo 'exit code from git pull: '${_tmp_ec}

    command cd ..
    echo
}




function bulkfileprocessor_test_block1 {
    ### bulkfileprocessor testing, block 1/2, begin ###
    flyway clean
    flyway baseline

    mariadb_user='root'
    mariadb_password='1234'
    mariadb_db='bulkfileprocessor'

    mariadb_sql_delete="DELETE FROM bulkfileprocessor.flyway_schema_history WHERE true ;"
    mariadb_bash_delete='mariadb --database='\'${mariadb_db}\'' --user='\'${mariadb_user}\'' --password='\'${mariadb_password}\'' --vertical --execute='\'${mariadb_sql_delete}\'
    echo "${mariadb_bash_delete}"
    eval "${mariadb_bash_delete}"
    echo $?

    mariadb_sql_select="SELECT * FROM bulkfileprocessor.flyway_schema_history WHERE true ;"
    mariadb_bash_select='mariadb --database='\'${mariadb_db}\'' --user='\'${mariadb_user}\'' --password='\'${mariadb_password}\'' --vertical --execute='\'${mariadb_sql_select}\'
    echo "${mariadb_bash_select}"
    eval "${mariadb_bash_select}"
    echo $?

    echo
    ### bulkfileprocessor testing, block 1/2, end ###
}




function bulkfileprocessor_test_block2 {
    ### bulkfileprocessor testing, block 2/2, begin ###
    sleep 60 ; echo 'pre-curl, 60s pause 1, done'
    sleep 30 ; echo 'pre-curl, 30s pause 2, done'
    # --location
    curl -s -i --request POST --header 'Content-Type: application/json' --data-raw '{"filename": "ebay_product_test_4.9_ALBERTO.csv","job":"product","storeId":"do-commerce"}' --url 'http://localhost:8283/v1/event/ftp'
    echo  'curl completed'
    sleep 60 ; echo 'post-curl, 60s pause 1, done'
    ### bulkfileprocessor testing, block 2/2, end ###
}




function _jh_update_repo {
    gch dev
    __check_gcd__=${?}

    if [ ${__check_gcd__} -eq '0' ] ; then
        echo
        gf
        gpl
        gf
        echo
        mcp
        echo
        gtt
        echo
        gb
    else
        echo '--> changes pending, aborting repo update'
    fi
    
    unset ${__check_gcd__}
}




function __jh_zerohelper_init {
    # cdkj_s
    command source ./jh-wm-zerohelper.sh.txt
    if [ -e ${__JH_WMP_START_LIST_FILE__} ]
    then
        command source ./_jh-wm-start-platform-list.sh.txt
    else
        __JH_WMP_START_LIST_UPDATED__='(file not available)'
    fi
    echo "updated, main:" ${__JH_WMP_UPDATED__}
    echo "updated, list:" ${__JH_WMP_START_LIST_UPDATED__}
    echo 'alias 0z: '$( alias 0z ) # alias overriding test
    echo
    __jh_zerohelper_menu
}




### aliases

ZH_ZEROHELPER_INIT='__jh_zerohelper_init'

alias __jh_zerohelper_menu='alias 3b 3r 3c 3s 4u ; echo ; echo $(alias 7) "# restart service" ; echo $(alias 8) "# kill platform" ; echo $(alias 9) "# restart platform " ; echo ; '

alias 0z='echo "alias overriding: jh-wm-zerohelper"'

alias _0s='sleep ${__JH_TIMEOUT_CONTINUE_SEC__}'

alias _0kp='_jh_kill_platform'
alias _0sp='_jh_start_platform'
alias _0ks='_jh_kill_service'
alias _0rs='_jh_restart_service'

alias _0tlp='_jh_truncate_logs_platform'
alias _0rlp='_jh_remove_logs_platform'

alias 3b='_jh_backup_alberto_platform'
alias 3r='_jh_restore_alberto_platform'
alias 3c='_jh_clean_restore_dir_alberto_platform'
alias 3s='_jh_mysqldump_alberto_platform'

alias 4u='_jh_update_repo'

alias 7='_0rs '
alias 8='_0kp ; _0rlp ;'
alias 9='_0kp ; _0rlp ; _0s; _0sp ;'


