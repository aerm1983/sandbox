debug=true

# NOTE
# Delimiter '@' to read variables from pom.xml is defined by SpringBoot2 framework.
# Without SpringBoot2, using Maven, delimiter is '${}' to read variables from pom.xml.


# standard maven variables
project.version=@project.version@
project.name=@project.name@
project.description=@project.description@

# customized maven variables
project.versionDate=@project.versionDate@
project.versionComment=@project.versionComment@


# server
server.servlet.context-path=/
server.port=9000

# spring.devtools
spring.devtools.add-properties=true
spring.devtools.restart.enabled=true
spring.mvc.log-request-details=true 
spring.codec.log-request-details=true


# spring.jpa
# client.datasource=datasource.properties
# spring.data.jdbc.repositories.enabled=true
# spring.datasource.url=
# spring.jpa.defer-datasource-initialization=true 
# spring.data.jpa.repositories.bootstrap-mode=default
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.data.jpa.repositories.bootstrap-mode=default
spring.jpa.show-sql=true
spring.h2.console.enabled=true




# Preferred JSON mapper to use for HTTP message conversion.
# spring.mvc.converters.preferred-json-mapper=gson
# spring.gson.serialize-nulls=false
# spring.gson.pretty-printing=true
spring.jackson.serialization.write-dates-as-timestamps=false


spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp


# logging
# logging.level.org.springframework=debug
# logging.level.org.springframework.web=debug
# logging.level.com.zaxxer.hikari.pool.HikariPool=DEBUG
# logging.level.com.zaxxer.hikari.HikariConfig=DEBUG


# other
# http://servicio:9002/issuer-provisioning/v2/ST-PE/tokenRequestors/{tokenRequestorID}/tokens/{tokenReferenceID}/approveProvisioning
# clear ; curl -v -s -X POST -H 'content-type: application/json' --data '{"a":"b"}' --url 'http://localhost:4000/api-issuer-mockup';
# management.endpoints.web.exposures.include=*
# spring.security.user.name=username
# spring.security.user.password=password

