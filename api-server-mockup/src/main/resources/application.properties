# NOTE
# Delimiter '@' to read variables from pom.xml is defined by SpringBoot2 framework.
# Without SpringBoot2, using Maven, delimiter is '${}' to read variables from pom.xml.


# standard maven variables
project.version=@project.version@
project.name=@project.name@
project.description=@project.description@

# customized maven variables
project.versionDate=@project.versionDate@
project.versionComment=@project.versionComment@



# client.datasource=datasource.properties


server.servlet.context-path=/
server.port=9000


#Preferred JSON mapper to use for HTTP message conversion.
# spring.mvc.converters.preferred-json-mapper=gson
# spring.gson.serialize-nulls=false
# spring.gson.pretty-printing=true


spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp



# spring.data.jdbc.repositories.enabled=true

# logging
logging.level.org.springframework=debug
# logging.level.com.zaxxer.hikari.pool.HikariPool=DEBUG
# logging.level.com.zaxxer.hikari.HikariConfig=DEBUG

# http://servicio:9002/issuer-provisioning/v2/ST-PE/tokenRequestors/{tokenRequestorID}/tokens/{tokenReferenceID}/approveProvisioning
# clear ; curl -v -s -X POST -H 'content-type: application/json' --data '{"a":"b"}' --url 'http://localhost:4000/api-issuer-mockup'; 