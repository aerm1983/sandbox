#!/bin/bash
# JAVA HELPER WM PLATFORM
# dependencies: git-bash-aliases.sh, set-java-version.sh

__JH_WMP_UPDATED__='2022-12-18 07:44'
__JH_TIMEOUT_RETRY_SEC__=15
__JH_TIMEOUT_CONTINUE_SEC__=5
__JH_GIT_CHECKOUT_PULL_DEV_FAIL_FILE__='zgit-checkout-pull-dev-fail.tmp'
__JH_GIT_COMPILE_FAIL_FILE__='zgit-compile-fail.tmp'



### main functions

function _jh_remove_logs {
    cdk_s
    command cd log

    command rm -v microservices*.jar.log

    command rm -v usermanagement*.jar.log

    command rm -v marketplacemirakl*.jar.log
    command rm -v marketplaceebay*.jar.log

    command rm -v mapping*.jar.log
    command rm -v productmanagement*.jar.log
    command rm -v ordermanagement*.jar.log
    command rm -v bulk*.jar.log

    command rm -v merchantlogisfashion*.jar.log

    command rm -v mailing*.jar.log
    command rm -v template-generator*.jar.log
    command rm -v ui*.jar.log

    clear ; echo 'refreshing...' ; sleep 1 ; clear ;
    alias 7
    pwd
    ll
    cdkj_s
    echo
}


function _jh_truncate_logs {
    cdk_s
    command cd log

    command echo -n '' > microservices*.jar.log

    command echo -n '' > usermanagement*.jar.log

    command echo -n '' > marketplacemirakl*.jar.log
    command echo -n '' > marketplaceebay*.jar.log

    command echo -n '' > mapping*.jar.log
    command echo -n '' > productmanagement*.jar.log
    command echo -n '' > ordermanagement*.jar.log
    command echo -n '' > bulk*.jar.log

    command echo -n '' > merchantlogisfashion*.jar.log

    command echo -n '' > mailing*.jar.log
    command echo -n '' > template-generator*.jar.log
    command echo -n '' > ui*.jar.log

    clear ; echo 'refreshing...' ; sleep 1 ; clear ;
    alias 7
    pwd
    ll
    cdkj_s
    echo
}


function _jh_kill_service {
    cdkj_s
    command cd ${1}
    pwd
    tk
    echo
}



function _jh_kill_platform {
    alias 1
    cdkj_s

    _jh_kill_service ui
    _jh_kill_service template-generator
    _jh_kill_service mailing
    
    _jh_kill_service merchantlogisfashion

    _jh_kill_service bulkfileprocessor
    _jh_kill_service ordermanagement
    _jh_kill_service productmanagement
    _jh_kill_service mappingmanagement

    _jh_kill_service marketplacemirakl
    _jh_kill_service marketplaceebay

    _jh_kill_service usermanagement

    _jh_kill_service microservicesregistry

    cdkj_s
}



function _jh_start_service {
    cdkj_s
    command cd ${1}
    pwd
    jjr
    command cd ..
    echo
    _jh_check_service_started ${1}
    echo
}



function _jh_check_service_started {
    cdkj_s
    command cd ${1}
    pwd
    while true ; do
	echo -n 'check '\'"${1}"\'' is started... '
        jjrg 'tomcat started' > /dev/null
	__check_ss__=${?}
	if [ ${__check_ss__} -eq '0' ] ; then
	    echo 'yes, wait '${__JH_TIMEOUT_CONTINUE_SEC__}' sec to continue... '
	    sleep ${__JH_TIMEOUT_CONTINUE_SEC__}
	    command cd ..
	    break
        else
	    echo 'no, retry in '${__JH_TIMEOUT_RETRY_SEC__}' sec'
	    sleep ${__JH_TIMEOUT_RETRY_SEC__}
	fi
    done
}



function _jh_start_platform {

    __date_ini=$( date )
    __uxt_ini=$( date +'%s' )

    alias 2
    cdkj_s
    sj8
    echo
    sleep ${__JH_TIMEOUT_CONTINUE_SEC__}

    ### bulkfileprocessor_test_block1
    # bulkfileprocessor_test_block1

    cdkj_s

    _jh_start_service microservicesregistry 

    _jh_start_service usermanagement

    _jh_start_service marketplacemirakl
    # _jh_start_service marketplaceebay

    # _jh_start_service mappingmanagement
    # _jh_start_service productmanagement
    _jh_start_service ordermanagement
    # _jh_start_service bulkfileprocessor

    # _jh_start_service merchantlogisfashion

    # _jh_start_service mailing
    # _jh_start_service template-generator
    # _jh_start_service ui

    cdkj_s

    ### bulkfileprocessor_test_block2
    # bulkfileprocessor_test_block2
    
    __uxt_end=$( date +'%s' )
    let '__uxt_diff=__uxt_end-__uxt_ini' '__proc_min=__uxt_diff/60' '__proc_sec=__uxt_diff%60' 
    echo 'WM local deployment completed'
    echo 'start: '$( date -d '@'${__uxt_ini} )
    echo 'end:   '$( date -d '@'${__uxt_end} )
    echo 'total execution time (min:sec) -- '${__proc_min}':'${__proc_sec}

}




### auxiliar / testing functions


function _jh_backup_localalberto_service {
    cdkj_s
    command cd ${1}
    echo '--> backup localalberto files from '\'$( pwd  )\'
    command cp -v pom.xml.localalberto '../zlocalalberto/z'${1}'/'
    command cp -v ./src/main/resources/application-localalberto.yml '../zlocalalberto/z'${1}'/'
    command cp -v ./src/main/resources/log4j2-localalberto.xml '../zlocalalberto/z'${1}'/'
    command git restore --source=dev pom.xml
    command cd ..
    echo
}

function _jh_backup_localalberto_platform {
    cdkj_s
    echo -e '--> backup localalberto files, whole platform\n'

    _jh_backup_localalberto_service microservicesregistry 

    _jh_backup_localalberto_service usermanagement

    _jh_backup_localalberto_service marketplacemirakl
    _jh_backup_localalberto_service marketplaceebay

    _jh_backup_localalberto_service mappingmanagement
    _jh_backup_localalberto_service productmanagement
    _jh_backup_localalberto_service ordermanagement
    _jh_backup_localalberto_service bulkfileprocessor

    _jh_backup_localalberto_service merchantlogisfashion

    _jh_backup_localalberto_service mailing
    _jh_backup_localalberto_service template-generator
    _jh_backup_localalberto_service ui
    
}

function _jh_restore_localalberto_service {
    cdkj_s
    command cd ${1}
    echo '--> restore localalberto files to '\'$( pwd  )\'
    command cp -v '../zlocalalberto/z'${1}'/pom.xml.localalberto' ./ 
    command cp -v '../zlocalalberto/z'${1}'/application-localalberto.yml' ./src/main/resources/
    command cp -v '../zlocalalberto/z'${1}'/log4j2-localalberto.xml' ./src/main/resources/
    command cp -v ./pom.xml.localalberto ./pom.xml
    command cd ..
    echo
}

function _jh_restore_localalberto_platform {
    cdkj_s
    echo -e '--> restore localalberto files, whole platform\n'
    echo

    _jh_restore_localalberto_service microservicesregistry 

    _jh_restore_localalberto_service usermanagement

    _jh_restore_localalberto_service marketplacemirakl
    _jh_restore_localalberto_service marketplaceebay

    _jh_restore_localalberto_service mappingmanagement
    _jh_restore_localalberto_service productmanagement
    _jh_restore_localalberto_service ordermanagement
    _jh_restore_localalberto_service bulkfileprocessor

    _jh_restore_localalberto_service merchantlogisfashion

    _jh_restore_localalberto_service mailing
    _jh_restore_localalberto_service template-generator
    _jh_restore_localalberto_service ui
    
}


function _jh_compile_service {
    cdkj_s
    command cd ${1}
    echo '--> compile service in '\'$( pwd  )\'
    tk
    command cp -v ./pom.xml.localalberto ./pom.xml
    echo -n 'compiling...'
    command mvn clean package -Dmaven.test.skip=true &> /dev/null
    _tmp_ec=${?}
    if [ ${_tmp_ec} -ne '0' ]; then
        echo $(basename $(pwd)) >> ../${__JH_GIT_COMPILE_FAIL_FILE__}
    fi
    echo 'exit code from mvn: '${_tmp_ec}

    
    command cd ..
    echo
}


function _jh_compile_platform {
    cdkj_s
    echo -e '--> compile, whole platform\n'
    sj8
    echo -e $(date)'\n''"compile" fail on project(s):' > ${__JH_GIT_COMPILE_FAIL_FILE__}
    echo

    _jh_compile_service microservicesregistry 

    _jh_compile_service usermanagement

    _jh_compile_service marketplacemirakl
    _jh_compile_service marketplaceebay

    _jh_compile_service mappingmanagement
    _jh_compile_service productmanagement
    _jh_compile_service ordermanagement
    _jh_compile_service bulkfileprocessor

    _jh_compile_service merchantlogisfashion

    _jh_compile_service mailing
    _jh_compile_service template-generator
    _jh_compile_service ui
    
    cat ${__JH_GIT_COMPILE_FAIL_FILE__}
    
}




function _jh_git_fetch_service {
    cdkj_s
    command cd ${1}
    echo '--> git fetch service in '\'$( pwd  )\'
    command git fetch
    echo 'exit code from git fetch: '${?}
    command cd ..
    echo
}


function _jh_git_fetch_platform {
    cdkj_s
    echo -e '--> git fetch, whole platform\n'

    _jh_git_fetch_service microservicesregistry 

    _jh_git_fetch_service usermanagement

    _jh_git_fetch_service marketplacemirakl
    _jh_git_fetch_service marketplaceebay

    _jh_git_fetch_service mappingmanagement
    _jh_git_fetch_service productmanagement
    _jh_git_fetch_service ordermanagement
    _jh_git_fetch_service bulkfileprocessor

    _jh_git_fetch_service merchantlogisfashion

    _jh_git_fetch_service mailing
    _jh_git_fetch_service template-generator
    _jh_git_fetch_service ui
    
}




function _jh_git_checkout_pull_dev_service {
    cdkj_s
    command cd ${1}
    echo '--> git checkout pull dev service in '\'$( pwd  )\'

    command git checkout dev
    _tmp_ec=${?}
    if [ ${_tmp_ec} -ne '0' ]; then
        echo $(basename $(pwd)) >> ../${__JH_GIT_CHECKOUT_PULL_DEV_FAIL_FILE__}
        echo 'exit code from git fetch: '${_tmp_ec}
        return ${_tmp_ec}
    fi
    echo 'exit code from git fetch: '${_tmp_ec}
    
    command git pull
    _tmp_ec=${?}
    if [ ${_tmp_ec} -ne '0' ]; then
        echo $(basename $(pwd)) >> ../$${__JH_GIT_CHECKOUT_PULL_DEV_FAIL_FILE__}
        echo 'exit code from git pull: '${_tmp_ec}
        return ${_tmp_ec}
    fi
    echo 'exit code from git pull: '${_tmp_ec}

    command cd ..
    echo
}


function _jh_git_checkout_pull_dev_platform {
    cdkj_s
    echo -e '--> git checkout pull dev, whole platform\n'
    echo -e $(date)'\n''"checkout-pull-dev" fail on project(s):' > ${__JH_GIT_CHECKOUT_PULL_DEV_FAIL_FILE__}

    _jh_git_checkout_pull_dev_service microservicesregistry 

    _jh_git_checkout_pull_dev_service usermanagement

    _jh_git_checkout_pull_dev_service marketplacemirakl
    _jh_git_checkout_pull_dev_service marketplaceebay

    _jh_git_checkout_pull_dev_service mappingmanagement
    _jh_git_checkout_pull_dev_service productmanagement
    _jh_git_checkout_pull_dev_service ordermanagement
    _jh_git_checkout_pull_dev_service bulkfileprocessor

    _jh_git_checkout_pull_dev_service merchantlogisfashion

    _jh_git_checkout_pull_dev_service mailing
    _jh_git_checkout_pull_dev_service template-generator
    _jh_git_checkout_pull_dev_service ui
    
    cat ${__JH_GIT_CHECKOUT_PULL_DEV_FAIL_FILE__}
    
}





function bulkfileprocessor_test_block1 {
    ### bulkfileprocessor testing, block 1/2, begin ###
    flyway clean
    flyway baseline

    mariadb_user='root'
    mariadb_password='1234'
    mariadb_db='bulkfileprocessor'

    mariadb_sql_delete="DELETE FROM bulkfileprocessor.flyway_schema_history WHERE true ;"
    mariadb_bash_delete='mariadb --database='\'${mariadb_db}\'' --user='\'${mariadb_user}\'' --password='\'${mariadb_password}\'' --vertical --execute='\'${mariadb_sql_delete}\'
    echo "${mariadb_bash_delete}"
    eval "${mariadb_bash_delete}"
    echo $?

    mariadb_sql_select="SELECT * FROM bulkfileprocessor.flyway_schema_history WHERE true ;"
    mariadb_bash_select='mariadb --database='\'${mariadb_db}\'' --user='\'${mariadb_user}\'' --password='\'${mariadb_password}\'' --vertical --execute='\'${mariadb_sql_select}\'
    echo "${mariadb_bash_select}"
    eval "${mariadb_bash_select}"
    echo $?

    echo
    ### bulkfileprocessor testing, block 1/2, end ###
}

function bulkfileprocessor_test_block2 {
    ### bulkfileprocessor testing, block 2/2, begin ###
    sleep 60 ; echo 'pre-curl, 60s pause 1, done'
    sleep 30 ; echo 'pre-curl, 30s pause 2, done'
    # --location
    curl -s -i --request POST --header 'Content-Type: application/json' --data-raw '{"filename": "ebay_product_test_4.9_ALBERTO.csv","job":"product","storeId":"do-commerce"}' --url 'http://localhost:8283/v1/event/ftp'
    echo  'curl completed'
    sleep 60 ; echo 'post-curl, 60s pause 1, done'
    ### bulkfileprocessor testing, block 2/2, end ###
}



### aliases

alias 0='. ./jh-wm-platform.sh.txt ; echo "updated:" ${__JH_WMP_UPDATED__} ; _0p'
alias _0p='alias 0 ; echo ; alias 3b 3r ; echo ; alias 4 4a ; echo ; alias 5f 5cp ; echo ; alias 7t 7r ; echo ; alias 8 9 ;'
alias _0s='sleep ${__JH_TIMEOUT_CONTINUE_SEC__}'

alias 1='_jh_kill_platform'
alias 2='_jh_start_platform'

alias 3b='_jh_backup_localalberto_platform'
alias 3r='_jh_restore_localalberto_platform'

alias 4='_jh_compile_platform # cycle: 3b ; 5f ;   5cp ; 3r ;   4'
alias 4a='3b ; 5f ; 5cp ; 3r ; 4'

alias 5f='_jh_git_fetch_platform'
alias 5cp='_jh_git_checkout_pull_dev_platform'

alias 7t='_jh_truncate_logs'
alias 7r='_jh_remove_logs'

alias 8='1 ; 7r ;         # kill_platform, remove_logs'
alias 9='1 ; 7r; _0s; 2 ; # 8, start_platform'

