# = = = = = = = = = = 
# CUSTOMIZED ALIASES
# = = = = = = = = = = 
# See constants section below for update date reference.
#
# INSTALLATION:
# Put a copy of this faile in $HOME folder.
# Filename: folowing convention, change to '.git-bash-aliases' when copying to $HOME or %USERPROFILE%
# Insert source hook in bash initialization file:
#     - linux: '~/.bashrc'.
#     - windows git-bash: '/etc/profile.d/aliases'.
# Source hook (edit as convenient):
#     srcfile='/c/Users/alber/.git-bash-aliases' ; if [ -e ${srcfile} ] ; then ; source ${srcfile} ; echo $( h_greeting ) ; fi ; unset srcfile ; 
#
# REMINDER:
# If an alias is to receive input frome pipe, do not use initial 'echo' helping reference.


# Constants required for script
__alias_last_update__='2022-08-31 11:20'
__alias_timeout__='0.3'


# Helping alias. Re-alias to '0' while testing / implementing changes:
alias __gba='rm '${HOME}'/bash-help.txt ; cp -v ./bash-help.txt '${HOME}'/.bash-help ; cp ./git-bash-aliases.sh.txt '${HOME}'/.git-bash-aliases  ; source '${HOME}'/.git-bash-aliases ; echo ; h_greeting ; echo ; h ;'


# General Aliases - file browsing and manipulation
alias e='exit'
alias l='echo "$(ls -a --color=always)"'
alias ll='ls -la --color=always'
alias c='_c_a_c'
alias cp='cp -v'
alias mv='mv -v'
alias rm='rm -v'
function _c_a_c { if [ -z "${1}" ] ; then clear ; else echo | awk '{ print '"${*}"' }' ; fi ; }

# testing:
alias lg='ls -a --color=always | grep'
alias llg='ls -la --color=always | grep'
function clg { cd $( ls | grep --color=never $1 ) ; }

# frequently used directories
alias cdk='cd ~/Desktop'
alias cdkj='cd ~/Desktop/dm-git-java'
alias cdks='cd ~/Desktop/are-git-sandbox'


# General aliases - text/binary search and processing
alias grep='grep --color=always -P'
alias sed='sed -E'
alias less='less -R -N -S -J'
alias diff='diff --color=always'
alias od='od -v -An -tx1'
alias sednc='sed -E '\''{ s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g }'\'
alias siwl='sed -E '\''{ s/(.)$/\1\n/g }'\'
function _grep_sed_uniq_rf { grep --color=never -r ${1} ./ | sed -E '{ s/^([^:]+):.+$/\1/ }' | uniq ; }
alias gsurf='_grep_sed_uniq_rf '


# General aliases - time
alias date.xs='date +%s'
alias date.sql='date +'\''%Y-%m-%d %H:%M:%S'\'

# General aliases - environment monitoring
function t { echo '--> declare -p' ${1} ; declare -p ${1} ; echo -e '\n--> type' ${1} ; type ${1} ; }

# General aliases - functions, helpers
function h_set_bh_file { bh_file_test=${HOME}/bash-help.txt ; bh_file_profile=${HOME}/.bash-help ; if [ -e ${bh_file_test} ] ; then bh_file=${bh_file_test} ; echo 'using TEST file' ; elif [ -e ${bh_file_profile} ] ; then bh_file=${bh_file_profile} ; echo 'using PROFILE file' ; else bh_file='' ; echo 'no source file available' ; fi ; }
function h_arg1_empty { grep --color=always 'updated:' ${bh_file} ; echo '($1 empty)' ; }
function h_arg1_not_empty { grep --color=always 'updated:' ${bh_file} ; grep --color=always ${1}':' ${bh_file} | sed -E '{ s/( {2};)( {2})/\1\n\2/g ; s/(Options?:|Examples?:)/\n\1\n/g ; s/(\.)( {2})/\1\n\2/g ; }' ; }
function h { echo "--> my bash help" ; h_set_bh_file ; if [ -z ${bh_file} ] ; then return 1  ; fi ; if [ -z $1 ] ; then h_arg1_empty ; else h_arg1_not_empty ${1} ; fi ;  }

function print_fn { type $1 | tr '\n' ' ' | sed -E 's/[ ]{2,}/ /g' ; }

function h_last_update { echo ${__alias_last_update__} ; }
function h_greeting { echo 'GBA - updated: '${__alias_last_update__} ; }

# General aliases -- Windows OS specific
function npp { 'notepad++' $1 & disown $! ; }






# java automation, addition begin

alias sj8='. ~/setjava8.sh.txt'
alias jl='jps -l'
alias jlg='jps -l ; echo ; jps -l | grep'
alias tk='taskkill //f //pid'
alias mc='mvn clean'
alias mcp='mvn clean package -Dmaven.test.skip'
function jj { jarfile=$( ls ./target/*.jar ) ; java -Dspring.profiles.active=$1 -jar $jarfile &  }

alias wsl='clear ; winpty wsl ;'


# alias sj8 jl jlg tk mc mcp wsl lg llg cdk ; print_fn jj ; print_fn clg
# java automation, addition end


# customized aliases, add

alias gs='echo "--> git status"; sleep ${__alias_timeout__}; git status'
alias gl='echo "--> git log --graph --all --decorate"; sleep ${__alias_timeout__}; git log --graph --all --decorate'
alias gb='echo "--> git branch"; sleep ${__alias_timeout__}; git branch'

alias gch='echo "--> git checkout"; sleep ${__alias_timeout__}; git checkout'
function ga { echo '--> git add' "${@}" ; sleep ${__alias_timeout__} ; git add "${@}" ; echo ; gs ; } 
alias gd='echo "--> git diff"; sleep ${__alias_timeout__}; git diff'
alias gco='echo "--> git commit"; sleep ${__alias_timeout__}; git commit' 

alias gr='echo "--> git reset --hard"; sleep ${__alias_timeout__}; git reset --hard'
alias gm='echo "--> git merge"; sleep ${__alias_timeout__}; git merge'

alias gf='echo "--> git fetch"; sleep ${__alias_timeout__}; git fetch ; echo ; gs';
alias gpl='echo "--> git pull"; sleep ${__alias_timeout__}; git pull'
alias gps='echo "--> git push"; sleep ${__alias_timeout__}; git push'

alias xo='echo "--> xdg-open"; sleep ${__alias_timeout__}; xdg-open'
alias s='echo "--> start"; sleep ${__alias_timeout__}; start'

s='--> Git Helper ('${__alias_last_update__}') \n'
s=${s}'  gs: git status \n' 
s=${s}'  gl: git log --graph --all --decorate \n'
s=${s}'  gb: git branch \n\n'
s=${s}'  gch: git checkout \n'
s=${s}'  ga: git add \n'
s=${s}'  gd: git diff \n'
s=${s}'  gco: git commit \n\n'
s=${s}'  gr: git reset --hard \n'
s=${s}'  gm: git merge \n\n'
s=${s}'  gf: git fetch \n'
s=${s}'  gpl: git pull \n'
s=${s}'  gps: git push \n\n'
s=${s}'  xo: xdg-open (linux) \n'
s=${s}'  s: start (windows) \n\n'
s=${s}'  # linux: add lines at the end of "~/.bashrc" \n'
s=${s}'  # windows git-bash: add lines at the end of "/etc/profile.d/aliases"' 
_gh_s=${s}
unset s
alias gh='echo -e "${_gh_s}"'



# = = = = = = = = = = = = =
# customized aliases, end
# = = = = = = = = = = = = =

