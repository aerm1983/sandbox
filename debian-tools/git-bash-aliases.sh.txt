# = = = = = = = = = = 
# CUSTOMIZED ALIASES
# = = = = = = = = = = 
# See constants section below for update date reference.
#
# INSTALLATION:
# Put a copy of this faile in $HOME folder.
# Filename: folowing convention, change to '.git-bash-aliases' when copying to $HOME or %USERPROFILE%
# Insert source hook in bash initialization file:
#     - linux: '~/.bashrc'.
#     - windows git-bash: '/etc/profile.d/aliases'.
# Source hook (edit as convenient):
#     srcfile='/c/Users/alber/.git-bash-aliases' ; if [ -e ${srcfile} ] ; then ; source ${srcfile} ; echo $( h_greeting ) ; fi ; unset srcfile ; 
#
# REMINDER:
# If an alias is to receive input frome pipe, do not use initial 'echo' helping reference.


# Constants required for script
__alias_last_update__='2022-09-09 06:29'
__alias_timeout__='0.3'


# Helping alias. Re-alias to '0' while testing / implementing changes:
alias __gba='
    cp -v ./bash-help.txt ${HOME}/.bash-help ; 
    cp -v ./git-bash-aliases.sh.txt ${HOME}/.git-bash-aliases  ; 
    cp -v ./set-java-version.sh.txt ${HOME}/.set-java-version  ; 
    source ${HOME}/.git-bash-aliases ; 
    echo ; 
    h_greeting ; echo ; h ;'



# ----------------------------------
# Colors
# ----------------------------------
NOCOLOR='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'



# ---------------------------------------------------
# General Aliases - file browsing and manipulation
# ---------------------------------------------------
alias e='exit'
alias l='echo "$(ls -a --color=always)"'
alias ll='ls -la --color=always'
alias c='_c_a_c'
alias cp='cp -v'
alias mv='mv -v'
alias rm='rm -v'
function _c_a_c { if [ -z "${1}" ] ; then clear ; else echo | awk '{ print '"${*}"' }' ; fi ; }

# testing:
alias lg='ls -a --color=always | grep'
alias llg='ls -la --color=always | grep'
function clg { cd $( ls | grep --color=never $1 ) ; }

# frequently used directories
alias cdk='cd ~/Desktop'
alias cdkj='cd ~/Desktop/dm-git-java'
alias cdks='cd ~/Desktop/are-git-sandbox'



# ------------------------------------------------------
# General aliases - text/binary search and processing
# ------------------------------------------------------
alias grep='grep --color=always -P'
alias sed='sed -E'
alias less='less -R -N -S -J'
alias diff='diff --color=always'
alias od='od -v -An -tx1'
alias snc='sed -E '\''{ s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g }'\'
alias siwl='sed -E '\''{ s/(.)$/\1\n/g }'\'

function _grep_sed_uniq_rf { grep --color=never -r ${1} ./ | sed -E '{ s/^([^:]+):.+$/\1/ }' | uniq ; }
alias gsurf='_grep_sed_uniq_rf '

# function _c_s_n_c { cat -n ${1} | sed -E 's/^[ \t]+([0-9]+)[ \t]+/'$(echo -e -n $BLUE)'\1'$(echo -e -n $NOCOLOR)' /' ; }
# alias csnc='_c_s_n_c'
alias csnc='cat -n | sed -E '\''s/^[ \t]+([0-9]+)[ \t]+/'$(echo -e -n $BLUE)'\1'$(echo -e -n $NOCOLOR)' /'\' 



# ------------------------------------------------------
# General aliases - time
# ------------------------------------------------------
alias date.xs='date +%s'
alias date.sql='date +'\''%Y-%m-%d %H:%M:%S'\'

# General aliases - environment monitoring
function t { echo '--> declare -p' ${1} ; declare -p ${1} ; echo -e '\n--> type' ${1} ; type ${1} ; }

# General aliases - functions, helpers
function h_set_bh_file { 
    bh_file_test=${HOME}/bash-help.txt ; 
    bh_file_profile=${HOME}/.bash-help ; 
    if [ -e ${bh_file_test} ] ; 
    then 
        bh_file=${bh_file_test} ; 
	echo 'using TEST file' ; 
    elif [ -e ${bh_file_profile} ] ; 
    then 
        bh_file=${bh_file_profile} ; 
        echo 'using PROFILE file' ; 
    else 
        bh_file='' ; 
        echo 'no source file available' ; 
    fi ; 
}
function h_arg1_empty { 
    grep --color=always 'updated:' ${bh_file}
    echo '($1 empty)'
}
function h_arg1_not_empty { 
    grep --color=always 'updated:' ${bh_file} ; 
    grep --color=always '^'${1}':' ${bh_file} | sed -E '{ s/( {2};)( {2})/\1\n\2/g ; s/(Actions?:|Options?:|Examples?:)/\n\1\n/g ; s/(\.)( {2})/\1\n\2/g ; }' ; 
}
function h { 
    echo "--> my bash help" ; 
    h_set_bh_file ; 
    if [ -z ${bh_file} ] ; 
    then 
        return 1  ; 
    fi ; 
    if [ -z $1 ] ; 
    then 
        h_arg1_empty ; 
    else 
        h_arg1_not_empty ${1} ; 
    fi ;  
}

function print_fn { 
    type $1 | tr '\n' ' ' | sed -E 's/[ ]{2,}/ /g' ; 
}

function h_last_update { 
    echo ${__alias_last_update__} ; 
}
function h_greeting { 
    echo 'GBA - updated: '${__alias_last_update__} ; 
}

# General aliases -- Windows OS specific
function npp { 
    'notepad++' $1 & disown $! ; 
}





# ------------------------------------------------------
# Java Aliases - java automation, addition begin
# ------------------------------------------------------

alias sj8='. ~/.set-java-version 8'
alias sj11='. ~/.set-java-version 11'

alias mc='mvn clean'
alias mcp='mvn clean package -Dmaven.test.skip'

function _j_j { 

    if [ -z ${1}]
    then 
        set 'localalberto'
        echo 'asigning '\'"${1}"\'' as arg1'
    fi
    
    if [ -e ./target/*jar ]
    then
        jarfile=$( ls ./target/*.jar )
        echo 'jar filename: '$( basename ${jarfile} )
        java -Dspring.profiles.active="${1}" -jar ${jarfile} &
        disown -a
    else
        echo 'file ./target/*jar must exist'
    fi
}
alias jj='_j_j'


function _j_j_r { 

    if [ -z ${1}]
    then
        set 'localalberto'
        echo 'asigning '\'"${1}"\'' as arg1'
    fi
    
    JAR_LOG_FOLDER=${HOME}'/Desktop/tmp'
    echo 'jar log folder: '${JAR_LOG_FOLDER}

    if [ -e ./target/*jar ]
    then
        jarfile=$( ls ./target/*.jar )
        echo 'jar filename: '$( basename ${jarfile} )
        java -Dspring.profiles.active="${1}" -jar ${jarfile} &>> ${JAR_LOG_FOLDER}/$( basename $( ls ./target/*jar ) ).log &
        disown -a
    else
        echo 'file ./target/*jar must exist'
    fi
    
}
alias jjr='_j_j_r'



function _j_l { 

    # all java processes
    jps -l

    
    # current dir java process
    if [ -e ./target/*jar ]
    then
        jarfile=$( basename $( ls ./target/*jar ) )
        if [ ! -z ${jarfile} ]
        then
            echo
            jps -l | grep --color=always ${jarfile}
        fi
    fi

    
    # arg ${1} java process
    if [ ! -z ${1} ]
    then 
        echo
        _s=$( jps -l | grep --color=always -P --color=always "${1}" )
        if [ ! -z "${_s}" ]
        then 
            echo "${_s}"
            else echo '"'${1}'": no results'
        fi
    fi
}

alias jl='_j_l'

function _t_k { 
    if [ -z ${1} ]
    then 
        if [ -e ./target/*jar ] ; then 
            jarfile=$( ls ./target/*.jar )
            _pid=$( jps -l | grep -P --color=never "${jarfile}" | awk '{ print $1 }' )
            echo ${_pid}
            jps -l | grep -P --color=always "${jarfile}"
            taskkill //f //pid "${_pid}"
        else 
            echo 'file ./target/*.jar must exist or PID must be provided'
        fi
    else 
        _n=$( echo ${1} | grep -P --color=never '^[0-9]+$' )
        if [ -z ${_n} ]
        then 
            _s=$( jps -l | grep --color=never "${1}" )
            echo "${_s}"; 
            _pid=$( echo "${_s}" | awk '{ print $1 }' )
        else 
            _pid=$( echo ${_n} )
        fi
        
        echo "${_pid}"
        taskkill //f //pid "${_pid}"
    fi
    unset _pid _s _n
} 

alias tk='_t_k'




alias wsl='clear ; winpty wsl'


# java automation, addition end



# ------------------------------------------------------
# Git Aliases
# ------------------------------------------------------

alias gs='echo "--> git status"; sleep ${__alias_timeout__}; git status'
alias gl='echo "--> git log --graph --all --decorate"; sleep ${__alias_timeout__}; git log --graph --all --decorate'
alias gb='echo "--> git branch"; sleep ${__alias_timeout__}; git branch'

alias gch='echo "--> git checkout"; sleep ${__alias_timeout__}; git checkout'
function ga { echo '--> git add' "${@}" ; sleep ${__alias_timeout__} ; git add "${@}" ; echo ; gs ; } 
alias gd='echo "--> git diff"; sleep ${__alias_timeout__}; git diff'
alias gco='echo "--> git commit"; sleep ${__alias_timeout__}; git commit' 

alias gr='echo "--> git reset --hard"; sleep ${__alias_timeout__}; git reset --hard'
alias gm='echo "--> git merge"; sleep ${__alias_timeout__}; git merge'

alias gf='echo "--> git fetch"; sleep ${__alias_timeout__}; git fetch ; echo ; gs';
alias gpl='echo "--> git pull"; sleep ${__alias_timeout__}; git pull'
alias gps='echo "--> git push"; sleep ${__alias_timeout__}; git push'

alias xo='echo "--> xdg-open"; sleep ${__alias_timeout__}; xdg-open'
alias s='echo "--> start"; sleep ${__alias_timeout__}; start'

s='--> Git Helper ('${__alias_last_update__}') \n'
s=${s}'  gs: git status \n' 
s=${s}'  gl: git log --graph --all --decorate \n'
s=${s}'  gb: git branch \n\n'
s=${s}'  gch: git checkout \n'
s=${s}'  ga: git add \n'
s=${s}'  gd: git diff \n'
s=${s}'  gco: git commit \n\n'
s=${s}'  gr: git reset --hard \n'
s=${s}'  gm: git merge \n\n'
s=${s}'  gf: git fetch \n'
s=${s}'  gpl: git pull \n'
s=${s}'  gps: git push \n\n'
s=${s}'  xo: xdg-open (linux) \n'
s=${s}'  s: start (windows) \n\n'
s=${s}'  # linux: add lines at the end of "~/.bashrc" \n'
s=${s}'  # windows git-bash: add lines at the end of "/etc/profile.d/aliases"' 
_gh_s=${s}
unset s
alias gh='echo -e "${_gh_s}"'


